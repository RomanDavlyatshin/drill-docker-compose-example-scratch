version: "3"

services:
  admin-ui:
    platform: linux/amd64
    image: drill4j/admin-ui-root-config:${FRONT_VERSION}
    ports:
      - 8091:8080
    environment:
      WAIT_HOSTS: drill-admin:8090
      UI_PLUGINS_URLS: "test2code#https://cdn.jsdelivr.net/npm/@drill4j/test2code-ui@${TEST2CODE_UI_VERSION}/dist/Drill4J-test-to-code.js"
    networks:
      - drill4j-dev-network
    depends_on:
      drill-admin:
        condition: service_healthy

  drill-admin:
    platform: linux/amd64
    image: drill4j/admin:${BACK_VERSION}
    environment:
      - DRILL_DB_PORT=5432
      - DRILL_AGENTS_SOCKET_TIMEOUT=6000
      - DRILL_DB_HOST=${POSTGRES_HOST}
      - DRILL_DB_NAME=${POSTGRES_DB}
      - DRILL_DB_USER_NAME=${POSTGRES_USER}
      - DRILL_DB_PASSWORD=${POSTGRES_PASSWORD}
      - DRILL_DB_MAX_POOL_SIZE=${DRILL_DB_MAX_POOL_SIZE}
      - LOG_LEVEL=info
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8090"]
      interval: 1s
      timeout: 3s
      retries: 30
    ports:
      - 8090:8090
      - 8453:8453
    networks:
      - drill4j-dev-network
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    platform: linux/amd64
    image: postgres:16.1
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - drill-data-pg:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - drill4j-dev-network

  # The sole function of this container is to download agent files
  # according to version specified in AGENT_VERSION env variable
  # and place them into volume named agent-files
  agent-files:
    image: drill4j/java-agent:latest
    environment:
      - AGENT_VERSION=0.8.0-38
    volumes:
      - agent-files:/data

volumes:
  drill-data-pg:
  agent-files:

networks:
  drill4j-dev-network:
